
name: B2B Spare Parts Automation

on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main
#   pull_request_review:
#     types:
#       - submitted
#   schedule:
#     - cron: '0 4 * * MON-FRI'
  workflow_dispatch:

env:
  BROWSER: Chrome
  PROJECT_LINK: https://uat-spareparts.musictribe.com

jobs:
  test-path-json:
    name: Output Test Path From Json
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: MT-QA-Automation-B2BSpareParts/B2BSpareParts
        token: ${{ secrets.MT_RF_REPO_PAT }}
    - id: set_matrix
      run: |
        content="$(cat test-path.json)"
        content="${content//'%'/' '}"
        content="${content//$'\n'/' '}"
        content="${content//$'\r'/' '}"
        echo "json=$content" >> $GITHUB_OUTPUT
    outputs:
      matrix: ${{ steps.set_matrix.outputs.json }}

  Main:
    needs: test-path-json
    name: Main
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson(needs.test-path-json.outputs.matrix).main}}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        repository: MT-QA-Automation-B2BSpareParts/B2BSpareParts
        token: ${{ secrets.MT_RF_REPO_PAT }}
    - name: Setup Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install Python Libraries
      run: pip install -r requirements.txt
    - name: Install Chromedriver
      if: ${{ env.BROWSER == 'Chrome' }}
      uses: nanasess/setup-chromedriver@master
    - name: Install Geckodriver
      if: ${{ env.BROWSER == 'Firefox' }}
      uses: browser-actions/setup-geckodriver@latest
    - name: Adjust Display Resolution
      run: Set-DisplayResolution -Width 1920 -Height 1080 -Force
    - name: Run Robot Tests
      run: robot -T -v "BROWSER:${{env.BROWSER}}" -v "PROJECT_LINK:${{env.PROJECT_LINK}}" -d "Results" -r NONE -e Deferred "${{matrix.test-suite}}"
    - name: Upload Artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.name}} Logs
        path: Results

  # Homepage:
  #   needs: test-path-json
  #   name: Homepage
  #   runs-on: windows-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include: ${{fromJson(needs.test-path-json.outputs.matrix).homepage}}
  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v3
  #     with:
  #       repository: MT-QA-Automation-B2BSpareParts/B2BSpareParts
  #       token: ${{ secrets.MT_RF_REPO_PAT }}
  #   - name: Setup Python 3.9
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: 3.9
  #   - name: Install Python Libraries
  #     run: pip install -r requirements.txt
  #   - name: Install Chromedriver
  #     if: ${{ env.BROWSER == 'Chrome' }}
  #     uses: nanasess/setup-chromedriver@master
  #   - name: Install Geckodriver
  #     if: ${{ env.BROWSER == 'Firefox' }}
  #     uses: browser-actions/setup-geckodriver@latest
  #   - name: Adjust Display Resolution
  #     run: Set-DisplayResolution -Width 1920 -Height 1080 -Force
  #   - name: Run Robot Tests
  #     run: robot -T -v "BROWSER:${{env.BROWSER}}" -v "PROJECT_LINK:${{env.PROJECT_LINK}}" -d "Results" -r NONE -e Deferred "${{matrix.test-suite}}"
  #   - name: Upload Artifacts
  #     if: always()
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: ${{matrix.name}} Logs
  #       path: Results

  Shopping-Cart:
    needs: test-path-json
    name: Shopping Cart
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson(needs.test-path-json.outputs.matrix).shopping-cart}}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        repository: MT-QA-Automation-B2BSpareParts/B2BSpareParts
        token: ${{ secrets.MT_RF_REPO_PAT }}
    - name: Setup Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install Python Libraries
      run: pip install -r requirements.txt
    - name: Install Chromedriver
      if: ${{ env.BROWSER == 'Chrome' }}
      uses: nanasess/setup-chromedriver@master
    - name: Install Geckodriver
      if: ${{ env.BROWSER == 'Firefox' }}
      uses: browser-actions/setup-geckodriver@latest
    - name: Adjust Display Resolution
      run: Set-DisplayResolution -Width 1920 -Height 1080 -Force
    - name: Run Robot Tests
      # run: robot -T -v "BROWSER:${{env.BROWSER}}" -v "PROJECT_LINK:${{env.PROJECT_LINK}}" -d "Results" -r NONE -e Deferred "${{matrix.test-suite}}"
      run: pabot --pabotlib -T -v "BROWSER:${{env.BROWSER}}" -v "PROJECT_LINK:${{env.PROJECT_LINK}}" -d "Results" -r NONE -e Deferred "${{matrix.test-suite}}"
    - name: Upload Artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.name}} Logs
        path: Results

  # Homepage-Cart:
  #   needs: [test-path-json,Shopping-Cart]
  #   name: Homepage-Cart
  #   runs-on: windows-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include: ${{fromJson(needs.test-path-json.outputs.matrix).homepage-cart}}
  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v3
  #     with:
  #       repository: MT-QA-Automation-B2BSpareParts/B2BSpareParts
  #       token: ${{ secrets.MT_RF_REPO_PAT }}
  #   - name: Setup Python 3.9
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: 3.9
  #   - name: Install Python Libraries
  #     run: pip install -r requirements.txt
  #   - name: Install Chromedriver
  #     if: ${{ env.BROWSER == 'Chrome' }}
  #     uses: nanasess/setup-chromedriver@master
  #   - name: Install Geckodriver
  #     if: ${{ env.BROWSER == 'Firefox' }}
  #     uses: browser-actions/setup-geckodriver@latest
  #   - name: Adjust Display Resolution
  #     run: Set-DisplayResolution -Width 1920 -Height 1080 -Force
  #   - name: Run Robot Tests
  #     run: robot -T -v "BROWSER:${{env.BROWSER}}" -v "PROJECT_LINK:${{env.PROJECT_LINK}}" -d "Results" -r NONE -e Deferred "${{matrix.test-suite}}"
  #   - name: Upload Artifacts
  #     if: always()
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: ${{matrix.name}} Logs
  #       path: Results

  # Global-Header-Cart:
  #   needs: [test-path-json,Shopping-Cart,Homepage-Cart]
  #   name: Global Header-Cart
  #   runs-on: windows-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include: ${{fromJson(needs.test-path-json.outputs.matrix).global-header-cart}}
  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v3
  #     with:
  #       repository: MT-QA-Automation-B2BSpareParts/B2BSpareParts
  #       token: ${{ secrets.MT_RF_REPO_PAT }}
  #   - name: Setup Python 3.9
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: 3.9
  #   - name: Install Python Libraries
  #     run: pip install -r requirements.txt
  #   - name: Install Chromedriver
  #     if: ${{ env.BROWSER == 'Chrome' }}
  #     uses: nanasess/setup-chromedriver@master
  #   - name: Install Geckodriver
  #     if: ${{ env.BROWSER == 'Firefox' }}
  #     uses: browser-actions/setup-geckodriver@latest
  #   - name: Adjust Display Resolution
  #     run: Set-DisplayResolution -Width 1920 -Height 1080 -Force
  #   - name: Run Robot Tests
  #     run: robot -T -v "BROWSER:${{env.BROWSER}}" -v "PROJECT_LINK:${{env.PROJECT_LINK}}" -d "Results" -r NONE -e Deferred "${{matrix.test-suite}}"
  #   - name: Upload Artifacts
  #     if: always()
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: ${{matrix.name}} Logs
  #       path: Results
